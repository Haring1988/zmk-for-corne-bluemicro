/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt { flavor = "tap-preferred"; };

&mt { flavor = "tap-preferred"; };

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <2 1>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <13 14>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <25 26>;
        };

        bac {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 9>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <22 21>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <3 4>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <15 16>;
        };

        pu {
            bindings = <&kp PAGE_UP>;
            key-positions = <7 8>;
        };

        pd {
            bindings = <&kp PG_DN>;
            key-positions = <19 20>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <33 34>;
        };
    };

    behaviors {
        tab_esc_ctrl: tab_esc_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_ESC_CTRL";
            #binding-cells = <0>;
            bindings = <&mt LCTRL ESC>, <&kp TAB>;
        };

        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <180>;
            global-quick-tap;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            global-quick-tap;
            flavor = "tap-preferred";
        };
    };

    macros {
        key: key {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(C) &kp H &kp L &kp DOT &kp N8 &kp N8 &kp N0 &kp N6 &kp N0 &kp N2 &kp EXCL &kp AT &kp POUND &kp DLLR &kp PRCNT &kp CARET &kp RET>;
            label = "KEY";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac_layer {
            bindings = <
&none  &kp Q    &kp W  &kp E           &kp R                 &kp T             &kp Y      &kp U             &kp I      &kp O    &kp P                 &none
&none  &kp A    &kp S  &kp D           &kp F                 &lt 5 G           &lt 5 H    &kp J             &kp K      &kp L    &kp ENTER             &none
&none  &lt 3 Z  &kp X  &kp C           &kp V                 &kp B             &kp N      &kp M             &kp COMMA  &kp DOT  &mt LEFT_SHIFT SLASH  &none
                       &lt 6 CAPSLOCK  &mt LCTRL LEFT_SHIFT  &lt 1 LEFT_WIN    &kp SPACE  &ltq 2 BACKSPACE  &lt 4 DEL
            >;
        };

        layer_1 {
            bindings = <
&trans  &kp N1     &kp N2      &kp N3     &kp N4        &kp N5             &kp N6     &kp N7        &kp N8      &kp N9    &kp N0     &trans
&trans  &kp MINUS  &kp EQUAL   &kp F2     &kp F5        &trans             &kp BSLH   &kp LBKT      &kp RBKT    &kp SEMI  &kp APOS   &trans
&trans  &kp GRAVE  &kp C_MUTE  &key       &kp C_VOL_DN  &kp C_VOLUME_UP    &trans     &kp UP_ARROW  &kp LEFT    &kp DOWN  &kp RIGHT  &trans
                               &kp LSHFT  &kp LALT      &trans             &kp SPACE  &kp BSPC      &kp DELETE
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp LS(N1)     &kp LS(N2)     &kp LS(N3)  &kp LS(N4)       &kp LS(N5)    &kp LS(N6)    &kp LS(N7)    &kp LS(N8)     &kp LS(N9)    &kp LS(N0)    &trans
&trans  &kp LS(MINUS)  &kp LS(EQUAL)  &kp INSERT  &kp PRINTSCREEN  &trans        &kp LS(BSLH)  &kp LS(LBKT)  &kp LS(RBKT)   &kp LS(SEMI)  &kp LS(APOS)  &trans
&trans  &kp LS(GRAVE)  &trans         &trans      &trans           &trans        &trans        &trans        &kp LS(COMMA)  &kp LS(DOT)   &kp LS(FSLH)  &trans
                                      &trans      &kp BSPC         &kp SPACE     &kp SPACE     &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp LEFT  &kp RIGHT  &kp N7  &kp N8   &kp N9     &kp LS(EQUAL)  &kp MINUS   &kp LS(N8)  &kp FSLH  &kp BSPC   &trans
&none   &kp LALT  &kp BSPC   &kp N4  &kp N5   &kp N6     &kp EQUAL      &kp LS(N9)  &kp LS(N0)  &trans    &kp ENTER  &trans
&trans  &trans    &kp ENTER  &kp N1  &kp N2   &kp N3     &trans         &trans      &trans      &kp LALT  &kp TAB    &trans
                             &kp N0  &kp DOT  &kp TAB    &trans         &trans      &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &bt BT_CLR     &bt BT_CLR_ALL  &bootloader   &bt BT_NXT    &bt BT_PRV      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0   &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_DISC 0  &bt BT_DISC 1   &out OUT_BLE  &out OUT_USB  &out OUT_TOG    &trans  &trans  &trans  &trans  &trans  &trans
                                       &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans    &kp UP_ARROW    &trans           &kp TAB     &trans     &trans          &kp UP_ARROW    &trans           &trans  &trans
&trans  &trans  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans      &trans     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans    &trans          &trans           &trans      &trans     &trans          &trans          &trans           &trans  &trans
                          &trans          &kp LALT         &kp LGUI    &kp SPACE  &kp BSPC        &kp DELETE
            >;
        };

        layer_6 {
            bindings = <
&trans  &kp LC(J)        &kp LA(LC(W))  &kp LC(LSHFT)  &kp LC(Y)  &kp LG(TAB)    &trans     &trans    &trans   &trans  &kp BSPC   &trans
&trans  &mt LA(A) LC(A)  &kp LC(S)      &kp LG(D)      &kp LC(F)  &kp LG(L)      &trans     &kp J     &trans   &trans  &kp ENTER  &trans
&trans  &kp LC(Z)        &kp LC(X)      &kp LC(C)      &kp LC(V)  &kp LC(B)      &trans     &trans    &trans   &trans  &trans     &trans
                                        &none          &kp TAB    &kp LALT       &kp SPACE  &kp BSPC  &kp DEL
            >;
        };
    };
};
